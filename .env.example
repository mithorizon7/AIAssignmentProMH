# AIGrader Environment Configuration
# Copy this file to .env and configure the values for your environment

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Application Environment
# Options: development, production
# Default: development
NODE_ENV=development

# Base URL for the application (REQUIRED for production deployment)
# Used for: API callbacks, email links, CORS configuration
# Development: http://localhost:5000
# Production: https://your-domain.com
BASE_URL=http://localhost:5000

# Structured Logging (REQUIRED for production deployment)
# Set to "true" (literal string) to enable JSON structured logging
# Development: false (human-readable logs)
# Production: true (JSON logs for log aggregation systems)
STRUCTURED_LOGGING=false

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Connection String (REQUIRED)
# Format: postgresql://username:password@host:port/database
# Example: postgresql://user:pass@localhost:5432/aigrader
DATABASE_URL=postgresql://user:password@localhost:5432/aigrader

# =============================================================================
# REDIS CONFIGURATION (Queue and Session Management)
# =============================================================================

# Enable Redis (Required for production, optional for development)
# Set to "true" to enable Redis and BullMQ queue processing
ENABLE_REDIS=false

# Redis Connection URL (takes precedence over individual parameters)
# Format: redis://username:password@host:port
# For Redis Cloud: rediss://default:password@hostname:port
REDIS_URL=

# Individual Redis Connection Parameters (used if REDIS_URL not provided)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_USERNAME=
REDIS_TOKEN=

# =============================================================================
# AI SERVICE CONFIGURATION
# =============================================================================

# Google Gemini API Configuration (Primary AI Service)
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# Gemini Model Name (Optional)
# Default: gemini-2.5-flash-preview-05-20
# Other options: gemini-2.5-flash, gemini-1.5-pro
GEMINI_MODEL_NAME=gemini-2.5-flash-preview-05-20

# OpenAI API Configuration (Fallback AI Service)
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# AUTHENTICATION CONFIGURATION
# =============================================================================

# Session Secret (REQUIRED)
# Generate a strong random string for session encryption
# Example: openssl rand -hex 32
SESSION_SECRET=your_very_secure_session_secret_here

# Auth0 SSO Configuration (Optional)
AUTH0_DOMAIN=your-auth0-domain.auth0.com
AUTH0_CLIENT_ID=your_auth0_client_id
AUTH0_CLIENT_SECRET=your_auth0_client_secret
AUTH0_CALLBACK_URL=http://localhost:5000/api/auth-sso/callback

# MIT Horizon OIDC Configuration (Optional - for MIT integration)
MIT_HORIZON_OIDC_ISSUER_URL=https://mit-horizon.auth0.com/
MIT_HORIZON_OIDC_CLIENT_ID=your_mit_client_id
MIT_HORIZON_OIDC_CLIENT_SECRET=your_mit_client_secret
MIT_HORIZON_OIDC_CALLBACK_URL=http://localhost:5000/api/auth/horizon/callback

# =============================================================================
# FILE STORAGE CONFIGURATION
# =============================================================================

# Google Cloud Storage Configuration (Optional)
# Required for production file uploads
GOOGLE_CLOUD_PROJECT_ID=your_gcs_project_id
GOOGLE_CLOUD_STORAGE_BUCKET=your_gcs_bucket_name

# Google Cloud Service Account (Optional)
# Path to service account JSON file for GCS authentication
GOOGLE_APPLICATION_CREDENTIALS=path/to/service-account.json

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CSRF Protection (Enabled by default)
# Set to "false" only for development testing
CSRF_PROTECTION=true

# Rate Limiting (Requests per minute)
# Default: 100 requests per minute per IP
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# =============================================================================
# DEVELOPMENT/TESTING CONFIGURATION
# =============================================================================

# Enable Debug Logging (Development only)
# Set to "true" to enable verbose debug logs
DEBUG_LOGGING=false

# Mock AI Responses (Development/Testing only)
# Set to "true" to use mock AI responses instead of real API calls
MOCK_AI_RESPONSES=false

# Disable Queue Processing (Development only)
# Set to "true" to process submissions synchronously for testing
DISABLE_QUEUE_PROCESSING=false

# =============================================================================
# OPTIONAL INTEGRATIONS
# =============================================================================

# Email Service Configuration (Optional)
# For sending notifications and password reset emails
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=your_email@example.com
SMTP_PASS=your_email_password
SMTP_FROM=AIGrader <noreply@yourdomain.com>

# Analytics and Monitoring (Optional)
# For application monitoring and analytics
ANALYTICS_API_KEY=your_analytics_key
MONITORING_API_KEY=your_monitoring_key