# Nginx Load Balancer Configuration for Horizontal Scaling
# Distributes requests across multiple application instances

events {
    worker_connections 1024;
}

http {
    # Upstream configuration for load balancing
    upstream aigrader_backend {
        # Round-robin load balancing (default)
        server app-1:5000 max_fails=3 fail_timeout=30s;
        server app-2:5000 max_fails=3 fail_timeout=30s;
        server app-3:5000 max_fails=3 fail_timeout=30s;
        
        # Health check configuration
        keepalive 32;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=uploads:10m rate=2r/s;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Main server configuration
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Health check endpoint (bypass load balancer)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API endpoints with load balancing
        location /api/ {
            # Rate limiting for API endpoints
            limit_req zone=api burst=20 nodelay;
            
            # Proxy configuration
            proxy_pass http://aigrader_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # File upload endpoints with stricter rate limiting
        location /api/submissions {
            # Stricter rate limiting for file uploads
            limit_req zone=uploads burst=5 nodelay;
            
            # Increase timeout for file uploads
            client_body_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            proxy_pass http://aigrader_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static assets (served directly by nginx for better performance)
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri @app;
        }

        # Fallback to application for SPA routing
        location / {
            proxy_pass http://aigrader_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Named location for static asset fallback
        location @app {
            proxy_pass http://aigrader_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Health check server for monitoring
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
        
        location /backend-health {
            proxy_pass http://aigrader_backend/api/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
    }
}